<%- include('partials/header') %>

<!-- ‚úÖ CSS DataTables -->
<link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css" rel="stylesheet" />

<style>
  body {
    background: #f1f3f5;
    font-family: 'Poppins', sans-serif;
  }

  h1 {
    color: #212529;
  }

  label {
    color: #495057;
    font-weight: 600;
  }

  .form-select,
  .form-control {
    border-radius: 0.75rem;
    padding: 0.75rem 1rem;
    border: 1px solid #ced4da;
    transition: all 0.3s;
  }

  .form-select:focus,
  .form-control:focus {
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    border-color: #80bdff;
  }

  .btn {
    border-radius: 0.75rem;
    font-weight: 600;
  }

  .btn-success {
    background-color: #198754;
    border-color: #198754;
  }

  .btn-success:hover {
    background-color: #157347;
  }

  .btn-outline-primary {
    border-radius: 0.75rem;
  }

  .card {
    border: none;
    border-radius: 1rem;
    background: #ffffff;
  }

  table.dataTable {
    border-radius: 0.75rem;
    overflow: hidden;
  }

  .badge {
    font-size: 0.75rem;
  }

  .table-dark {
    background-color: #343a40;
    color: #fff;
  }

  .table-dark th {
    color: #f8f9fa;
  }

  #selectAllBtn {
    transition: all 0.3s;
  }

  #selectAllBtn:hover {
    background-color: #0d6efd;
    color: #fff;
  }
</style>
<style>
  .table-responsive {
    border-radius: 1rem;
    overflow: hidden;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
  }

  #officesTable {
    background: #ffffff;
  }

  #officesTable thead {
    background: #212529;
    color: #ffffff;
  }

  #officesTable th {
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  #officesTable tbody tr:nth-child(even) {
    background-color: #f8f9fa;
  }

  #officesTable tbody tr:hover {
    background-color: #e2e6ea;
    transition: all 0.2s;
  }

  #officesTable td {
    vertical-align: middle;
  }

  .office-checkbox {
    transform: scale(1.2);
    cursor: pointer;
  }

  .badge {
    font-size: 0.75rem;
    border-radius: 0.5rem;
    padding: 0.35em 0.6em;
  }
</style>
<style>
  /* ÿ™ÿ≠ÿ≥ŸäŸÜ ÿ¥ŸÉŸÑ ÿßŸÑŸÄ Payment Plans */
  #officesTable ul {
    padding-left: 0;
  }

  #officesTable li {
    font-size: 0.85rem;
  }

  #officesTable .badge {
    font-size: 0.7rem;
    border-radius: 0.5rem;
    padding: 0.35em 0.6em;
  }
</style>

<div class="container py-5">
  <div class="card shadow p-5 rounded-4">
    <h1 class="mb-4 fw-bold">üîß Bulk Price Update</h1>

    <!-- ‚úÖ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÅÿ±ÿπ + ŸÇŸäŸÖÿ© ÿßŸÑÿ≤ŸäÿßÿØÿ© + ÿ≤ÿ± -->
    <div class="row g-4 mb-4">
      <div class="col-md-5">
        <label class="form-label">üìç Select Branch:</label>
        <select id="branchSelect" class="form-select">
          <option value="">Loading branches...</option>
        </select>
      </div>
      <div class="col-md-4">
        <label class="form-label">üí∞ Increase Amount (AED):</label>
        <input type="number" id="increaseAmount" class="form-control" placeholder="e.g. 1000" />
      </div>
      <div class="col-md-3 d-flex align-items-end">
        <button class="btn btn-success w-100" id="applyBtn">‚úÖ Apply Increase</button>
      </div>
    </div>

    <!-- ‚úÖ Select All ÿ≤ÿ±ÿßÿ± -->
    <div class="d-flex justify-content-end mb-3">
      <button id="selectAllBtn" class="btn btn-outline-primary">‚úîÔ∏è Select All Offices</button>
    </div>

    <!-- ‚úÖ ÿ¨ÿØŸàŸÑ ÿßŸÑŸÖŸÉÿßÿ™ÿ® -->
    <div class="table-responsive">
      <table id="officesTable" class="table table-striped table-bordered rounded-4">
        <thead class="table-dark">
          <tr>
            <th>Select</th>
            <th>Office Number</th>
            <th>Floor</th>
            <th>Payment Plans</th>
          </tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>
</div>

<!-- ‚úÖ Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  // ‚úÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÅÿ±Ÿàÿπ
  async function loadBranches() {
    const res = await fetch('/offices/api/branches');
    const branches = await res.json();
    console.log('‚úÖ branches:', branches);

    let html = '<option value="">-- Select Branch --</option>';
    branches.forEach(branch => {
      html += `<option value="${branch._id}">${branch.name}</option>`;
    });

    $('#branchSelect').html(html);
  }

  loadBranches();

  // ‚úÖ ÿ•ÿπÿØÿßÿØ DataTable
  let table = $('#officesTable').DataTable({
    columns: [
      { data: 'select', orderable: false },
      { data: 'office_number' },
      { data: 'floor' },
      { data: 'payment_plans', orderable: false }
    ]
  });

  // ‚úÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖŸÉÿßÿ™ÿ® ÿπŸÜÿØ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑŸÅÿ±ÿπ
  $('#branchSelect').on('change', async function() {
    console.log('‚úÖ Branch changed!');
    const branchId = $(this).val();
    console.log('‚úÖ branchId:', branchId);

    if (!branchId) {
      table.clear().draw();
      console.log('‚úÖ Cleared table');
      return;
    }

    const res = await fetch(`/offices/branch/${branchId}/offices?t=${Date.now()}`);
    const offices = await res.json();
    console.log('‚úÖ offices:', offices);

    table.clear();

   offices.forEach(office => {
  table.row.add({
    select: `<input type="checkbox" class="office-checkbox form-check-input" value="${office._id}" />`,
    office_number: `<strong>${office.office_number}</strong>`,
    floor: office.floor,
    payment_plans: `
      <ul class="list-unstyled mb-0">
        ${office.payment_plans.map(p => `
          <li class="mb-1">
            <span class="badge bg-primary">üí≥ ${p.type}</span>
            <span class="text-muted">${p.total_price} AED</span>
          </li>
        `).join('')}
      </ul>
    `
  });
});

    table.draw();
  });

  // ‚úÖ ÿ≤ÿ±ÿßÿ± Select All Offices
  $('#selectAllBtn').on('click', function() {
    $('.office-checkbox').prop('checked', true);
    const totalSelected = $('.office-checkbox:checked').length;

    Swal.fire({
      icon: 'info',
      title: `‚úîÔ∏è Selected ${totalSelected} offices`,
      text: `You are about to update ${totalSelected} offices!`,
      confirmButtonText: 'OK'
    });
  });

  // ‚úÖ ÿ™ŸÜŸÅŸäÿ∞ ÿßŸÑÿ≤ŸäÿßÿØÿ©
  $('#applyBtn').on('click', async function() {
    const amount = parseFloat($('#increaseAmount').val());
    if (!amount) {
      Swal.fire('‚ö†Ô∏è', 'Please enter a valid amount!', 'warning');
      return;
    }

    const officeIds = $('.office-checkbox:checked').map(function() {
      return this.value;
    }).get();

    if (officeIds.length === 0) {
      Swal.fire('‚ö†Ô∏è', 'Please select at least one office!', 'warning');
      return;
    }

    const res = await fetch('/offices/bulk-update-price', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ officeIds, increaseAmount: amount })
    });

    if (res.ok) {
      Swal.fire('‚úÖ', 'Prices updated successfully!', 'success');
      $('#branchSelect').trigger('change');
    } else {
      Swal.fire('‚ùå', 'Something went wrong!', 'error');
    }
  });
</script>

<%- include('partials/footer') %>
