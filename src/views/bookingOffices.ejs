<%- include('partials/header') %>

<div class="d-flex justify-content-between align-items-center mb-4">
  <h1 class="text-primary fw-bold">üóÇÔ∏è Offices in Branch</h1>
  <a href="/offices/new?branch_id=<%= branchId %>" class="btn btn-success fw-semibold shadow">
    ‚ûï Add New Office
  </a>
</div>

<!-- üîç Live Search -->
<div class="mb-4">
  <input id="searchInput" type="text" placeholder="üîç Search office number, floor, status, or company..." class="form-control form-control-lg shadow-sm rounded-pill">
</div>

<!-- Filter -->
<form method="GET" action="/bookings/branch/<%= branchId %>" class="mb-4">
  <div class="row g-3 align-items-center">
    <div class="col-auto">
      <label class="col-form-label fw-semibold">Filter:</label>
    </div>
    <div class="col-auto">
      <select name="filter" class="form-select rounded-pill px-3 shadow-sm" onchange="this.form.submit()">
        <option value="all" <%= filter === 'all' ? 'selected' : '' %>>Show All</option>
        <option value="available" <%= filter === 'available' ? 'selected' : '' %>>Show Only Available</option>
        <option value="booked" <%= filter === 'booked' ? 'selected' : '' %>>Show Only Rented</option>
      </select>
    </div>
  </div>
</form>

<!-- Stats -->
<div class="row mb-4 g-3">
  <% const statCards = [
    { label: 'Total Offices', value: totalOffices, color: 'primary' },
    { label: 'Available Offices', value: totalAvailable, color: 'success' },
    { label: 'Rented Offices', value: totalBooked, color: 'danger' },
    { label: 'Expiring This Month', value: expiringThisMonth, color: 'warning', textColor: 'text-dark' },
  ]; %>
  <% statCards.forEach(stat => { %>
    <div class="col-sm-6 col-md-3">
      <div class="card text-center bg-<%= stat.color %> text-white shadow-sm stat-card">
        <div class="card-body">
          <h6 class="card-title"><%= stat.label %></h6>
          <h2 class="<%= stat.textColor || '' %>"><%= stat.value %></h2>
        </div>
      </div>
    </div>
  <% }); %>
</div>

<!-- Chart -->
<div class="text-center mb-4">
  <h5 class="fw-bold">üìä Office Occupancy</h5>
  <div style="max-width: 320px; margin: 0 auto;">
    <canvas id="occupancyChart"></canvas>
  </div>
</div>

<script>
  const occupancyCtx = document.getElementById('occupancyChart').getContext('2d');
  new Chart(occupancyCtx, {
    type: 'pie',
    data: {
      labels: ['Booked', 'Available'],
      datasets: [{
        data: [<%= totalBooked %>, <%= totalAvailable %>],
        backgroundColor: ['#dc3545cc', '#198754cc'],
        borderColor: ['#dc3545', '#198754'],
        borderWidth: 1
      }]
    },
    options: { responsive: true, maintainAspectRatio: false }
  });
</script>

<%
  const today = new Date();
  const endOfMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0);
%>

<!-- Office Grid -->
<div class="row g-3" id="officeGrid">
  <% offices.forEach(office => {
    const booking = bookings.find(b => b.office_id?.toString() === office._id.toString());
    const isBooked = !!booking;
    const isExpiringSoon = isBooked && new Date(booking.end_date) >= today && new Date(booking.end_date) <= endOfMonth;

    if (filter === 'all' || (filter === 'available' && !isBooked) || (filter === 'booked' && isBooked)) { %>

    <div class="col-6 col-sm-4 col-md-3 col-lg-2 office-card"
         data-number="<%= office.office_number %>"
         data-floor="<%= office.floor %>"
         data-status="<%= isBooked ? 'booked' : 'available' %>"
         data-company="<%= booking?.client_id?.company_en || booking?.client_id?.name || '' %>">
         
      <div class="office-box <%= isBooked ? 'office-booked' : 'office-available' %>">
        <% if (isBooked) { %>
          <a href="/bookings/view/<%= booking._id %>" class="stretched-link"></a>
        <% } %>

        <div class="d-flex justify-content-between mb-2">
          <span class="badge rounded-pill <%= isBooked ? 'bg-danger' : 'bg-success' %>">
            <%= isBooked ? 'üî¥ Booked' : 'üü¢ Available' %>
          </span>
        </div>

        <div class="flex-grow-1 d-flex flex-column justify-content-between">
          <div>
            <h6 class="fw-bold">Office <%= office.office_number %></h6>
            <p class="mb-1">üè¢ Floor: <%= office.floor || 'N/A' %></p>

            <% if (isExpiringSoon) { %>
              <span class="badge bg-warning text-dark mb-2">‚ö†Ô∏è Expires This Month</span>
            <% } %>

            <% if (isBooked) { %>
              <p class="mb-1"><strong>Booked by:</strong> <%= booking.client_id?.company_en || booking.client_id?.name || 'N/A' %></p>

              <% if (inspectionStatusMap && inspectionStatusMap[booking._id.toString()] !== undefined) { %>
                <div class="remaining-inspections mb-1">
                  üõ°Ô∏è <%= inspectionStatusMap[booking._id.toString()] %> free inspections remaining
                </div>
              <% } %>

              <p class="mb-1"><strong>From:</strong> <%= new Date(booking.start_date).toISOString().split('T')[0] %></p>
              <p class="mb-0"><strong>To:</strong> <%= new Date(booking.end_date).toISOString().split('T')[0] %></p>
            <% } %>
          </div>

          <% if (!isBooked) { %>
            <div class="mt-2">
              <a href="/bookings/new/<%= office._id %>" class="btn btn-sm btn-outline-primary w-100 fw-bold">
                üöÄ Rent Now
              </a>
            </div>
          <% } %>
        </div>
      </div>
    </div>

  <% } }); %>
</div>

<!-- üîç Live Search Script -->
<script>
  const searchInput = document.getElementById('searchInput');
  const officeCards = document.querySelectorAll('.office-card');

  searchInput.addEventListener('input', function () {
    const query = this.value.toLowerCase();

    officeCards.forEach(card => {
      const number = card.dataset.number?.toLowerCase() || '';
      const floor = card.dataset.floor?.toLowerCase() || '';
      const status = card.dataset.status?.toLowerCase() || '';
      const company = card.dataset.company?.toLowerCase() || '';

      const match = number.includes(query) || floor.includes(query) || status.includes(query) || company.includes(query);
      card.style.display = match ? 'block' : 'none';
    });
  });
</script>

<style>
  .office-box {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 280px;
    padding: 1rem;
    border: 2px solid #e0e0e0;
    border-radius: 16px;
    background-color: #fff;
    transition: all 0.3s ease;
    gap: 0.5rem;
    overflow: hidden;
  }

  .office-available {
    background-color: #e8f5e9;
    border-color: #81c784;
  }

  .office-booked {
    background-color: #fff3f3;
    border-color: #e57373;
  }

  .office-box:hover {
    border-color: #0d6efd;
    box-shadow: 0 6px 14px rgba(0, 0, 0, 0.12);
    transform: scale(1.03);
  }

  .remaining-inspections {
    background-color: #d1ecf1;
    color: #0c5460;
    font-weight: bold;
    font-size: 0.8rem;
    padding: 4px 8px;
    border: 1px solid #bee5eb;
    border-radius: 4px;
  }

  .office-box h6,
  .office-box p {
    margin: 0;
    font-size: 0.85rem;
    line-height: 1.2;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .stretched-link {
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    z-index: 1;
  }

  .stat-card {
    transition: 0.3s ease;
  }

  .stat-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);
  }
</style>

<%- include('partials/footer') %>
